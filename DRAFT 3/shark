--[[

	Shark
	Draft 3
	
	PLAN:
		- UI
			- Sharkle bar
			- Menu (History, Settings, About, Exit)
		- Language
			- Shark Language Sheet (.sls)
		- Local Storage
			- Shark Pages
				- Home
				- History
				- Settings
				- About
				- Error Codes (Not Found, Timeout etc.)
			- DNS
				- Local redirecting and resolving
			- History
				- History of your visits
			- Sites (hosting)
				- Host a site
			- Certificates
				- Allows you to access certain private sites
		- Error Codes
			- 1: Domain not found
			- 2: Page not found
			- 3: Host didn't respond (doesn't exist or Shark not running)
			- 4: Host requires certificate
			- 5: Host denied certificate
			- 6: DNS couldn't resolve hostname
--]]

local SHARKLE = "local://test/"

local SHARK_PATH = "/sharkfs/"
local SHARK_PATH_SITES = SHARK_PATH.."sites/"
local SHARK_PATH_HISTORY = SHARK_PATH.."history"
local SHARK_PATH_SETTINGS = SHARK_PATH.."settings"
local SHARK_PATH_CERTS = SHARK_PATH.."certs"
local SHARK_PATH_DNS = SHARK_PATH.."dns"

local GLOBALS = {
	["color"] = {
		SWITCH = false,
		OLD_TC = nil,
		OLD_BC = nil
	},
	["cursor"] = {
		SWITCH = false,
		X = 0,
		Y = 0
	},
	["print"] = {
		SWITCH = false,
		X = 0,
		Y = 0
	},
	["write"] = {
		SWITCH = false,
		X = 0,
		Y = 0
	},
	["button"] = {
		SWITCH = false,
		OLD_X = 0,
		OLD_Y = 0,
		X = 0,
		Y = 0,
		W = 0,
		H = 0,
		LINK = "",
		COUNT = 1
	}
}

local COMMANDS = {
	["color"] = {
		FUNCTION = function(t)
			GLOBALS["color"].SWITCH = true
			GLOBALS["color"].OLD_TC = term.getTextColor()
			GLOBALS["color"].OLD_BC = term.getBackgroundColor()
			if #t > 1 then
				term.setTextColor(colors[t[1]])
				term.setBackgroundColor(colors[t[2]])
			else
				term.setTextColor(colors[t[1]])
			end
		end,
		CON_FUNCTION = function()
			return nil
		end,
		INV_FUNCTION = function()
			GLOBALS["color"].SWITCH = false
			term.setTextColor(GLOBALS["color"].OLD_TC)
			term.setBackgroundColor(GLOBALS["color"].OLD_BC)
			GLOBALS["color"].OLD_TC = nil
			GLOBALS["color"].OLD_BC = nil
		end
	},
	["cursor"] = {
		FUNCTION = function(t)
			GLOBALS["cursor"].SWITCH = true
			local _X,_Y = unpack(t)
			GLOBALS["cursor"].OLD_X,GLOBALS["cursor"].OLD_Y = term.getCursorPos()
			term.setCursorPos(tonumber(_X),tonumber(_Y))
		end,
		CON_FUNCTION = function()
			return nil
		end,
		INV_FUNCTION = function()
			GLOBALS["color"].SWITCH = false
			term.setCursorPos(GLOBALS["cursor"].OLD_X,GLOBALS["cursor"].OLD_Y)
			GLOBALS["color"].OLD_X = 0
			GLOBALS["color"].OLD_Y = 0
		end
	},
	["print"] = {
		FUNCTION = function(t)
			GLOBALS["print"].SWITCH = true
			local _X,_Y = unpack(t)
			term.setCursorPos(tonumber(_X),tonumber(_Y))
			GLOBALS["print"].X,GLOBALS["print"].Y = term.getCursorPos()
		end,
		CON_FUNCTION = function(s)
			local _X,_Y = term.getCursorPos()
			term.setCursorPos(GLOBALS["print"].X,_Y)
			print(s)
			return true
		end,
		INV_FUNCTION = function()
			GLOBALS["print"].SWITCH = false
			GLOBALS["print"].X = 0
			GLOBALS{"print"].Y = 0
		end
	},
	["write"] = {
		FUNCTION = function(t)
			GLOBALS["write"].SWITCH = true
			local _X,_Y = unpack(t)
			term.setCursorPos(tonumber(_X),tonumber(_Y))
			GLOBALS["write"].X,GLOBALS["write"].Y = term.getCursorPos()
		end,
		CON_FUNCTION = function(s)
			write(s)
			return true
		end,
		INV_FUNCTION = function()
			GLOBALS["write"].SWITCH = false
			GLOBALS["write"].X = 0
			GLOBALS["write"].Y = 0
		end
	},
	["button"] = {
		FUNCTION = function(t)
			GLOBALS["button"].SWITCH = true,
			local _X,_Y,_W,_H,_LINK = unpack(t)
			GLOBALS["button"].X = tonumber(_X)
			GLOBALS["button"].Y = tonumber(_Y)
			if tonumber(_W) then
				GLOBALS["button"].W = tonumber(_W)
				GLOBALS["button"].H = tonumber(_H)
				GLOBALS{"button"].LINK = _LINK
				paintutils.drawFilledBox(GLOBALS["button"].X,GLOBALS["button"].Y,GLOBALS["button"].X+GLOBALS["button"].W-1,,GLOBALS["button"].Y+,GLOBALS["button"].H-1,term.getBackgroundColor())
			else
				GLOBALS["button"].W = 0
				GLOBALS["button"].H = 0
				GLOBALS["button"].LINK = _W
			end
			GLOBALS["button"].OLD_X,GLOBALS["button"].OLD_Y = term.getCursorPos()
		end,
		CON_FUNCTION = function(s)
			local _X,_Y, GLOBALS["button"].X,GLOBALS["button"].Y
			if GLOBALS["button"].W == 0 then
				GLOBALS["button"].W = #s+2
				local _W = GLOBALS["button"].W
				term.setCursorPos(_X,_Y)
				print(string.rep(" ",_W))
				term.setCursorPos(_X,_Y+1)
				print(" "..s.." ")
				term.setCursorPos(_X,_Y+2)
				print(string.rep(" ",_W))
			else
				term.setCursorPos(_X+1,_Y+GLOBALS["button"].COUNT)
				print(s)
				GLOBALS["button"].COUNT = GLOBALS["button"].COUNT + 1
			end
		end,
		INV_FUNCTION = function()
			table.insert(FIELDS,GLOBALS["button"])
			GLOBALS["button"].SWITCH = false
			GLOBALS["button"].OLD_X = 0,
			GLOBALS["button"].OLD_Y = 0,
			GLOBALS["button"].X = 0,
			GLOBALS["button"].Y = 0,
			GLOBALS["button"].W = 0,
			GLOBALS["button"].H = 0,
			GLOBALS["button"].LINK = "",
			GLOBALS["button"].COUNT = 1
		end
	}
}

-- Error out
local function f_ERROR(_S,_L)
	term.setBackgroundColor(colors.black)
	term.setTextColor(colors.red)
	if _L then
		printError("ERROR ON LINE ".._L..":")
		printError(_S)
		error("",0)
	else
		printError("ERROR:")
		printError(_S)
		error("",0)
	end
end
